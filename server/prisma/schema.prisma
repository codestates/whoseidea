// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id              Int        @id @default(autoincrement())
  nickname          String
  password        String
  email           String
  profile         String
  UsersToPosts    Posts[]    @relation("UsersToPosts")
  UsersToLikes    Likes[]    @relation("UsersToLikes")
  UsersToComments Comments[] @relation("UsersToComments")
  UsersToMessage  Message[]  @relation("UsersToMessage")
}

model Posts {
  id               Int        @id @default(autoincrement())
  nickname           Int
  caption          String
  file             String
  likes            Int
  view             Int
  context          String
  created_at       DateTime   @default(now())
  UsersToPosts     Users?     @relation("UsersToPosts", fields: [nickname], references: [id])
  PostsToLikes     Likes[]    @relation("PostsToLikes")
  PostsToComments2 Comments[] @relation("PostsToComments")
}

model Likes {
  id           Int    @id @default(autoincrement())
  nickname       Int
  postId       Int
  UsersToLikes Users? @relation("UsersToLikes", fields: [nickname], references: [id])
  PostsToLikes Posts? @relation("PostsToLikes", fields: [postId], references: [id])
}

model Comments {
  id               Int    @id @default(autoincrement())
  text             String
  nickname           Int
  postId           Int
  UsersToComments  Users? @relation("UsersToComments", fields: [nickname], references: [id])
  PostsToComments2 Posts? @relation("PostsToComments", fields: [postId], references: [id])
}

model Message {
  id             Int    @id @default(autoincrement())
  nickname         Int
  text           String
  UsersToMessage Users? @relation("UsersToMessage", fields: [nickname], references: [id])
}
